<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="j.jave.framework.components.login.mapper.UserRoleMapper">


<resultMap id="jBaseModel"  type="j.jave.framework.commons.model.JBaseModel"   >
<result column="ID" property="id"  jdbcType="VARCHAR" />
<result column="CREATEID" property="createId"  jdbcType="VARCHAR" />
<result column="UPDATEID" property="updateId"  jdbcType="VARCHAR" />
<result column="CREATETIME" property="createTime"  jdbcType="TIMESTAMP" />
<result column="UPDATETIME" property="updateTime"  jdbcType="TIMESTAMP" />
<result column="DELETED" property="deleted"  jdbcType="VARCHAR" />
<result column="VERSION" property="version"  jdbcType="INTEGER" />
</resultMap>

<resultMap id="userRole"  type="j.jave.framework.components.login.model.UserRole"  extends="jBaseModel" >
<result column="ROLEID" property="roleId"  jdbcType="VARCHAR" />
<result column="USERID" property="userId"  jdbcType="VARCHAR" />
<result column="DESCRIPTION" property="description"  jdbcType="VARCHAR" />


<result column="USERNAME" property="user.userName"  jdbcType="VARCHAR" />
<result column="ROLENAME" property="role.roleName"  jdbcType="VARCHAR" />
<result column="ROLECODE" property="role.roleCode"  jdbcType="VARCHAR" />

</resultMap>


<insert  id="save" parameterType="j.jave.framework.components.login.model.UserRole">
insert into USERS_ROLES
(
ROLEID,USERID,DESCRIPTION
,ID,CREATEID,UPDATEID,CREATETIME,UPDATETIME,DELETED,VERSION
)values(
#{roleId},#{userId},#{description}
,#{id},#{createId},#{updateId},#{createTime},#{updateTime},#{deleted},#{version}
)
</insert>


<update id="update">
update USERS_ROLES
<set>  
UPDATEID =#{updateId},UPDATETIME =#{updateTime}
<if test="roleId!=null">,ROLEID =#{roleId}</if>
<if test="userId!=null">,USERID =#{userId}</if>
<if test="description!=null">,DESCRIPTION =#{description}</if>
<if test="version!=null">,VERSION =#{version}</if>
</set>  
where ID=#{id}
</update>


<delete id="markDeleted" >
update USERS_ROLES set DELETED='Y' where ID=#{id}
</delete>


<select id="get"   resultMap="userRole"  >
<include refid="selectfor"></include> 
where a.id=#{param1}
</select>


<sql id="selectfor">
select a.*, b.USERNAME USERNAME, c.ROLENAME ROLENAME from USERS_ROLES a
LEFT JOIN USERS b on a.USERID=b.ID
LEFT JOIN ROLES c on a. ROLEID=c.ID
</sql>
<sql id="associationFilter">
    (b.DELETED='N' and c.DELETED='N') 
</sql>

<select id="getsByPage"  resultMap="userRole"  parameterType="j.jave.framework.commons.model.JPagination">
    select * from USERS_ROLES 
    <if test="page.sortColumn!=null ">
    	order by ${page.sortColumn} ${page.sortType}    
    </if>
</select>


<select id="getUserRolesByUserId"  resultMap="userRole"  parameterType="java.lang.String">
    <include refid="selectfor"></include>
    where a.DELETED='N' 
    and <include refid="associationFilter"></include>
    <if test="userId!=null  and userId!='' ">
    	and a.USERID=#{userId}
    </if>
    
</select>

<select id="countOnUserIdAndRoleId" resultType="int">
    select count(1) 
    from USERS_ROLES a
	LEFT JOIN USERS b on a.USERID=b.ID
	LEFT JOIN ROLES c on a. ROLEID=c.ID
    where a.DELETED='N' 
    and <include refid="associationFilter"></include>
    and  a.USERID=#{userId} and a.ROLEID=#{roleId}
</select>

<select id="getUserRoleOnUserIdAndRoleId"  resultMap="userRole" >
    <include refid="selectfor"></include>  
    where a.DELETED='N'  
    and <include refid="associationFilter"></include>
    and   a.USERID=#{userId} and a.ROLEID=#{roleId}
</select>

</mapper>