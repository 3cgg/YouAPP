<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="j.jave.platform.basicwebcomp.resource.mapper.ResourceGroupMapper">


<resultMap id="jBaseModel"  type="j.jave.kernal.jave.model.JBaseModel"   >
<result column="ID" property="id"  jdbcType="VARCHAR" />
<result column="CREATEID" property="createId"  jdbcType="VARCHAR" />
<result column="UPDATEID" property="updateId"  jdbcType="VARCHAR" />
<result column="CREATETIME" property="createTime"  jdbcType="TIMESTAMP" />
<result column="UPDATETIME" property="updateTime"  jdbcType="TIMESTAMP" />
<result column="DELETED" property="deleted"  jdbcType="VARCHAR" />
<result column="VERSION" property="version"  jdbcType="INTEGER" />
</resultMap>

<resultMap id="resourceGroup"  type="j.jave.platform.basicwebcomp.resource.model.ResourceGroup"  extends="jBaseModel" >
<result column="RESOURCEID" property="resourceId"  jdbcType="VARCHAR" />
<result column="GROUPID" property="groupId"  jdbcType="VARCHAR" />
<result column="DESCRIPTION" property="description"  jdbcType="VARCHAR" />
<result column="ENABLE" property="enable"  jdbcType="VARCHAR" />

<result column="GROUPNAME" property="group.groupName"  jdbcType="VARCHAR" />
<result column="GROUPCODE" property="group.groupCode"  jdbcType="VARCHAR" />
<result column="URL" property="resource.url"  jdbcType="VARCHAR" />

</resultMap>


<insert  id="saveModel" parameterType="j.jave.platform.basicwebcomp.resource.model.ResourceGroup">
insert into RESOURCES_GROUPS
(
RESOURCEID,GROUPID,DESCRIPTION,ENABLE
,ID,CREATEID,UPDATEID,CREATETIME,UPDATETIME,DELETED,VERSION
)values(
#{resourceId},#{groupId},#{description},#{enable}
,#{id},#{createId},#{updateId},#{createTime},#{updateTime},#{deleted},#{version}
)
</insert>


<update id="updateModel">
updateModel RESOURCES_GROUPS
<set>  
UPDATEID =#{updateId},UPDATETIME =#{updateTime}
<if test="resourceId!=null">,RESOURCEID =#{resourceId}</if>
<if test="groupId!=null">,GROUPID =#{groupId}</if>
<if test="description!=null">,DESCRIPTION =#{description}</if>
<if test="enable!=null">,ENABLE =#{enable}</if>
<if test="version!=null">,VERSION =#{version}</if>
</set>  
where ID=#{id}
</update>


<delete id="markModelDeleted" >
updateModel RESOURCES_GROUPS set DELETED='Y' where ID=#{id}
</delete>


<select id="getModel"   resultMap="resourceGroup"  >
<include refid="selectfor"></include> 
where a.id=#{param1}
</select>


<sql id="selectfor">
select a.* ,
b.GROUPNAME GROUPNAME,
b.GROUPCODE GROUPCODE,
c.URL URL
from RESOURCES_GROUPS a 
left join GROUPS b on a.GROUPID=b.ID
left join RESOURCES c on a.RESOURCEID=c.ID
</sql>
<sql id="associationFilter">
    (b.DELETED='N' and c.DELETED='N') 
</sql>

<select id="getModelsByPage"   resultMap="resourceGroup"  parameterType="j.jave.kernal.jave.model.JPagination">
select * from RESOURCES_GROUPS  
<if test="page.sortColumn!=null ">
order by ${page.sortColumn} ${page.sortType}   
</if>
</select>



<select id="getResourceGroupsByResourceId"  resultMap="resourceGroup"  parameterType="java.lang.String">
    <include refid="selectfor"></include>
    where a.DELETED='N' 
    and <include refid="associationFilter"></include>
    <if test="resourceId !=null  and resourceId !='' ">
    	and a.RESOURCEID=#{resourceId}
    </if>
    
</select>

<select id="countOnResourceIdAndGroupId" resultType="int">
    select count(1) 
    from RESOURCES_GROUPS a 
	left join GROUPS b on a.GROUPID=b.ID
	left join RESOURCES c on a.RESOURCEID=c.ID
    where a.DELETED='N' 
    and <include refid="associationFilter"></include>
    and  a.RESOURCEID=#{resourceId} and a.GROUPID=#{groupId}
</select>

<select id="getResourceGroupOnResourceIdAndGroupId"  resultMap="resourceGroup" >
    <include refid="selectfor"></include>
    where a.DELETED='N' 
    and <include refid="associationFilter"></include>
    and  a.RESOURCEID=#{resourceId} and a.GROUPID=#{groupId}
</select>





</mapper>